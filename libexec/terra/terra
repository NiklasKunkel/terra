#!/usr/bin/env bash
### terra -- feedbot and tools
### Usage: terra [<options>] <command> [<args>]
###    or: terra <command> --help
###
### Feedbot and tools
###
### Bot options:
###
###    --api-key=<key>            key needed for participating in network
###    -F, --from=<address>       address used for signing
###    --keystore=<dir>           local keystore directory
###    -S, --password=<file>      password for non-interactive signing

OPTS="terra [<options>] <command> [<args>]
terra <command> --help
--
  Bot options:
api-key=key          key needed for participating in network
F,from=address       address used for signing
keystore=dir         local keystore directory
S,password=file      password for non-interactive signing
"

set -e

if ! [[ $TERRA_INIT ]]; then
  export TERRA_INIT=1
  # shellcheck source=/dev/null
  [[ -e ~/.terrarc ]] && . ~/.terrarc
  # shellcheck source=/dev/null
  [[ $(pwd) != ~ && -e .terrarc ]] && . .terrarc
fi

if [[ $2 = --help ]]; then
  exec "${0##*/}" help -- "$1"
elif [[ $1 = -* ]] && which "${0##*/}-$1" &>/dev/null; then
  exec "${0##*/}-$1" "${@:2}"
fi

eval "$(git rev-parse --parseopt -- "$@" <<<"$OPTS" || echo exit $?)"

while [[ $1 ]]; do
  case $1 in
    --)              shift; break;;

    --api-key)       shift; export TERRA_API_KEY=$1;;
    -F|--from)       shift; export ETH_FROM=$1;;

    --keystore)      shift; export ETH_KEYSTORE=$1;;
    -S|--password)   shift; export ETH_PASSWORD=$1;;

    *) printf "${0##*/}: internal error: %q\\n" "$1"; exit 1
  esac; shift
done

"${0##*/}-${1-help}" "${@:2}"